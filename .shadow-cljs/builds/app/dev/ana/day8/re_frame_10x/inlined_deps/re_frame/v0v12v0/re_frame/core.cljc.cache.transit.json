["^ ","~:output",["^ ","~:js","goog.provide('day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core');\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.dispatch = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.dispatch;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.dispatch_sync = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.dispatch_sync;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_sub = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.reg_sub;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.subscribe = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.subscribe;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.clear_sub = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.clear_handlers,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.kind);\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.clear_subscription_cache_BANG_ = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.clear_subscription_cache_BANG_;\r\n/**\r\n * This is a low level, advanced function.  You should probably be\r\n *   using reg-sub instead.\r\n *   Docs in https://github.com/day8/re-frame/blob/master/docs/SubscriptionFlow.md\r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_sub_raw = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$reg_sub_raw(query_id,handler_fn){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.register_handler(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.kind,query_id,handler_fn);\r\n});\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_fx = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.reg_fx;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.clear_fx = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.clear_handlers,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.kind);\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_cofx = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.reg_cofx;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.inject_cofx = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.inject_cofx;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.clear_cofx = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.clear_handlers,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.kind);\r\n/**\r\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\r\n *   an `interceptors` chain.\r\n *   `id` is typically a namespaced keyword  (but can be anything)\r\n *   `handler` is a function: (db event) -> db\r\n *   `interceptors` is a collection of interceptors. Will be flattened and nils removed.\r\n *   `handler` is wrapped in its own interceptor and added to the end of the interceptor\r\n * chain, so that, in the end, only a chain is registered.\r\n * Special effects and coeffects interceptors are added to the front of this\r\n * chain.\r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$reg_event_db(var_args){\r\nvar G__66576 = arguments.length;\r\nswitch (G__66576) {\r\ncase 2:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3(id,null,handler);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.inject_db,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.do_fx,interceptors,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.db_handler__GT_interceptor(handler)], null));\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$lang$maxFixedArity = 3);\r\n\r\n/**\r\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\r\n *   an `interceptors` chain.\r\n *   `id` is typically a namespaced keyword  (but can be anything)\r\n *   `handler` is a function: (coeffects-map event-vector) -> effects-map\r\n *   `interceptors` is a collection of interceptors. Will be flattened and nils removed.\r\n *   `handler` is wrapped in its own interceptor and added to the end of the interceptor\r\n * chain, so that, in the end, only a chain is registered.\r\n * Special effects and coeffects interceptors are added to the front of the\r\n * interceptor chain.  These interceptors inject the value of app-db into coeffects,\r\n * and, later, action effects.\r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$reg_event_fx(var_args){\r\nvar G__66586 = arguments.length;\r\nswitch (G__66586) {\r\ncase 2:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.inject_db,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.do_fx,interceptors,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.fx_handler__GT_interceptor(handler)], null));\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$lang$maxFixedArity = 3);\r\n\r\n/**\r\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\r\n *   an `interceptors` chain.\r\n *   `id` is typically a namespaced keyword  (but can be anything)\r\n *   `handler` is a function: (context-map event-vector) -> context-map\r\n * \r\n *   This form of registration is almost never used. \r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$reg_event_ctx(var_args){\r\nvar G__66594 = arguments.length;\r\nswitch (G__66594) {\r\ncase 2:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.inject_db,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.do_fx,interceptors,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.ctx_handler__GT_interceptor(handler)], null));\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$lang$maxFixedArity = 3);\r\n\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.clear_handlers,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.events.kind);\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.debug = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.debug;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.path = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.path;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.enrich = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.enrich;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.trim_v = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.trim_v;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.after = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.after;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.on_changes = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.on_changes;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.__GT_interceptor = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.__GT_interceptor;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.get_coeffect = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.get_coeffect;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.assoc_coeffect = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.assoc_coeffect;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.get_effect = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.get_effect;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.assoc_effect = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.assoc_effect;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.enqueue = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.enqueue;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.set_loggers_BANG_ = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.set_loggers_BANG_;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.console;\r\n/**\r\n * Checkpoints the state of re-frame and returns a function which, when\r\n *   later called, will restore re-frame to that checkpointed state.\r\n * \r\n *   Checkpoint includes app-db, all registered handlers and all subscriptions.\r\n *   \r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.make_restore_fn = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$make_restore_fn(){\r\nvar handlers = cljs.core.deref(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.kind__GT_id__GT_handler);\r\nvar app_db = cljs.core.deref(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.db.app_db);\r\nvar subs_cache = cljs.core.deref(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.query__GT_reaction);\r\nreturn (function (){\r\nvar original_subs_66627 = cljs.core.set(cljs.core.vals(subs_cache));\r\nvar current_subs_66628 = cljs.core.set(cljs.core.vals(cljs.core.deref(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.query__GT_reaction)));\r\nvar seq__66598_66629 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(current_subs_66628,original_subs_66627));\r\nvar chunk__66599_66630 = null;\r\nvar count__66600_66631 = (0);\r\nvar i__66601_66632 = (0);\r\nwhile(true){\r\nif((i__66601_66632 < count__66600_66631)){\r\nvar sub_66633 = chunk__66599_66630.cljs$core$IIndexed$_nth$arity$2(null,i__66601_66632);\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interop.dispose_BANG_(sub_66633);\r\n\r\n\r\nvar G__66634 = seq__66598_66629;\r\nvar G__66635 = chunk__66599_66630;\r\nvar G__66636 = count__66600_66631;\r\nvar G__66637 = (i__66601_66632 + (1));\r\nseq__66598_66629 = G__66634;\r\nchunk__66599_66630 = G__66635;\r\ncount__66600_66631 = G__66636;\r\ni__66601_66632 = G__66637;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___66638 = cljs.core.seq(seq__66598_66629);\r\nif(temp__5735__auto___66638){\r\nvar seq__66598_66639__$1 = temp__5735__auto___66638;\r\nif(cljs.core.chunked_seq_QMARK_(seq__66598_66639__$1)){\r\nvar c__4556__auto___66640 = cljs.core.chunk_first(seq__66598_66639__$1);\r\nvar G__66641 = cljs.core.chunk_rest(seq__66598_66639__$1);\r\nvar G__66642 = c__4556__auto___66640;\r\nvar G__66643 = cljs.core.count(c__4556__auto___66640);\r\nvar G__66644 = (0);\r\nseq__66598_66629 = G__66641;\r\nchunk__66599_66630 = G__66642;\r\ncount__66600_66631 = G__66643;\r\ni__66601_66632 = G__66644;\r\ncontinue;\r\n} else {\r\nvar sub_66645 = cljs.core.first(seq__66598_66639__$1);\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interop.dispose_BANG_(sub_66645);\r\n\r\n\r\nvar G__66646 = cljs.core.next(seq__66598_66639__$1);\r\nvar G__66647 = null;\r\nvar G__66648 = (0);\r\nvar G__66649 = (0);\r\nseq__66598_66629 = G__66646;\r\nchunk__66599_66630 = G__66647;\r\ncount__66600_66631 = G__66648;\r\ni__66601_66632 = G__66649;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\ncljs.core.reset_BANG_(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.kind__GT_id__GT_handler,handlers);\r\n\r\ncljs.core.reset_BANG_(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.db.app_db,app_db);\r\n\r\nreturn null;\r\n});\r\n});\r\n/**\r\n * Remove all events queued for processing\r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.purge_event_queue = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$purge_event_queue(){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.event_queue.day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$router$IEventQueue$purge$arity$1(null);\r\n});\r\n/**\r\n * Registers a function `f` to be called after each event is processed\r\n * `f` will be called with two arguments:\r\n *  - `event`: a vector. The event just processed.\r\n *  - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\r\n * \r\n * This is useful in advanced cases like:\r\n *   - you are implementing a complex bootstrap pipeline\r\n *   - you want to create your own handling infrastructure, with perhaps multiple\r\n *     handlers for the one event, etc.  Hook in here.\r\n *   - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\r\n * \r\n *   'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\r\n *   be used at \"remove time\" to get rid of the right callback.\r\n *   \r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$add_post_event_callback(var_args){\r\nvar G__66610 = arguments.length;\r\nswitch (G__66610) {\r\ncase 1:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1 = (function (f){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2(f,f);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2 = (function (id,f){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.event_queue.day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$router$IEventQueue$add_post_event_callback$arity$3(null,id,f);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$lang$maxFixedArity = 2);\r\n\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.remove_post_event_callback = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$remove_post_event_callback(id){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.event_queue.day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$router$IEventQueue$remove_post_event_callback$arity$2(null,id);\r\n});\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_handler = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$register_handler(var_args){\r\nvar args__4742__auto__ = [];\r\nvar len__4736__auto___66651 = arguments.length;\r\nvar i__4737__auto___66652 = (0);\r\nwhile(true){\r\nif((i__4737__auto___66652 < len__4736__auto___66651)){\r\nargs__4742__auto__.push((arguments[i__4737__auto___66652]));\r\n\r\nvar G__66653 = (i__4737__auto___66652 + (1));\r\ni__4737__auto___66652 = G__66653;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nvar G__66612_66654 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\r\nvar G__66613_66655 = \"re-frame:  \\\"register-handler\\\" has been renamed \\\"reg-event-db\\\" (look for registration of\";\r\nvar G__66614_66656 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args));\r\nvar G__66615_66657 = \")\";\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.cljs$core$IFn$_invoke$arity$4 ? day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.cljs$core$IFn$_invoke$arity$4(G__66612_66654,G__66613_66655,G__66614_66656,G__66615_66657) : day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.call(null,G__66612_66654,G__66613_66655,G__66614_66656,G__66615_66657));\r\n\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db,args);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_handler.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_handler.cljs$lang$applyTo = (function (seq66611){\r\nvar self__4724__auto__ = this;\r\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq66611));\r\n}));\r\n\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_sub = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$register_sub(var_args){\r\nvar args__4742__auto__ = [];\r\nvar len__4736__auto___66658 = arguments.length;\r\nvar i__4737__auto___66659 = (0);\r\nwhile(true){\r\nif((i__4737__auto___66659 < len__4736__auto___66658)){\r\nargs__4742__auto__.push((arguments[i__4737__auto___66659]));\r\n\r\nvar G__66660 = (i__4737__auto___66659 + (1));\r\ni__4737__auto___66659 = G__66660;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nvar G__66617_66661 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\r\nvar G__66618_66662 = \"re-frame:  \\\"register-sub\\\" is deprecated. Use \\\"reg-sub-raw\\\" (look for registration of\";\r\nvar G__66619_66663 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args));\r\nvar G__66620_66664 = \")\";\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.cljs$core$IFn$_invoke$arity$4 ? day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.cljs$core$IFn$_invoke$arity$4(G__66617_66661,G__66618_66662,G__66619_66663,G__66620_66664) : day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.call(null,G__66617_66661,G__66618_66662,G__66619_66663,G__66620_66664));\r\n\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_sub_raw,args);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_sub.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_sub.cljs$lang$applyTo = (function (seq66616){\r\nvar self__4724__auto__ = this;\r\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq66616));\r\n}));\r\n\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",66],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router","^O","~$subs","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs","~$set","~$clojure.set","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx","^T","~$cofx","^T","~$fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx","^Q","^Q","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar","^X","~$loggers","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers","^W","^W","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor","^[","~$cljs.core","^10","~$interceptor","^[","^Z","^Z","~$goog","^12","~$router","^O","~$db","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.db","~$registrar","^X","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors","^17","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop","^18","^S","^S","~$events","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events","^15","^15","^1:","^1:","~$interop","^18","~$std-interceptors","^17"],"~:seen",["^H",["~:require"]],"~:uses",["^ ","~$db-handler->interceptor","^17","~$fx-handler->interceptor","^17","~$ctx-handler->interceptor","^17"],"~:require-macros",["^ ","^10","^10"],"~:form",["~#list",["~$ns","^J",["^1E",["^1>",["^1:","~:as","^19"],["^Q","^1G","^P"],["^18","^1G","^1;"],["^15","^1G","^14"],["^W","^1G","^V"],["^T","^1G","^U"],["^O","^1G","^13"],["^Z","^1G","^Y"],["^X","^1G","^16"],["^[","^1G","^11"],["^17","^1G","^1<","~:refer",["^1@","^1A","^1B"]],["^S","^1G","^R"]]]]],"~:flags",["^ ","^1>",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^12","^10","^1:","^Q","^18","^15","^W","^T","^O","^Z","^X","^[","^17","^S"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc"],"~:compiled-at",1635492901060,"~:resource-name","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","~:warnings",[],"~:source","(ns day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events           :as events]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs             :as subs]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop          :as interop]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.db               :as db]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx               :as fx]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx             :as cofx]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router           :as router]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers          :as loggers]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar        :as registrar]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor      :as interceptor]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors :as std-interceptors :refer [db-handler->interceptor\n                                                                                                            fx-handler->interceptor\n                                                                                                            ctx-handler->interceptor]]\n    [clojure.set               :as set]))\n\n\n;; -- API ---------------------------------------------------------------------\n;;\n;; This namespace represents the re-frame API\n;;\n;; Below, you'll see we've used this technique:\n;;   (def  api-name-for-fn    deeper.namespace/where-the-defn-is)\n;;\n;; So, we promote a `defn` in a deeper namespace \"up\" to the API\n;; via a `def` in this namespace.\n;;\n;; Turns out, this approach makes it hard:\n;;   - to auto-generate API docs\n;;   - for IDEs to provide code completion on functions in the API\n;;\n;; Which is annoying. But there are pros and cons and we haven't\n;; yet revisited the decision.  To compensate, we've added more nudity\n;; to the docs.\n;;\n\n\n;; -- dispatch ----------------------------------------------------------------\n(def dispatch       router/dispatch)\n(def dispatch-sync  router/dispatch-sync)\n\n\n;; -- subscriptions -----------------------------------------------------------\n(def reg-sub        subs/reg-sub)\n(def subscribe      subs/subscribe)\n\n(def clear-sub (partial registrar/clear-handlers subs/kind))  ;; think unreg-sub\n(def clear-subscription-cache! subs/clear-subscription-cache!)\n\n(defn reg-sub-raw\n  \"This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/day8/re-frame/blob/master/docs/SubscriptionFlow.md\"\n  [query-id handler-fn]\n  (registrar/register-handler subs/kind query-id handler-fn))\n\n\n;; -- effects -----------------------------------------------------------------\n(def reg-fx      fx/reg-fx)\n(def clear-fx    (partial registrar/clear-handlers fx/kind))  ;; think unreg-fx\n\n;; -- coeffects ---------------------------------------------------------------\n(def reg-cofx    cofx/reg-cofx)\n(def inject-cofx cofx/inject-cofx)\n(def clear-cofx (partial registrar/clear-handlers cofx/kind)) ;; think unreg-cofx\n\n\n;; -- Events ------------------------------------------------------------------\n\n(defn reg-event-db\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain.\"\n  ([id handler]\n    (reg-event-db id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (db-handler->interceptor handler)])))\n\n\n(defn reg-event-fx\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects.\"\n  ([id handler]\n   (reg-event-fx id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (fx-handler->interceptor handler)])))\n\n\n(defn reg-event-ctx\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. \"\n  ([id handler]\n   (reg-event-ctx id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (ctx-handler->interceptor handler)])))\n\n(def clear-event (partial registrar/clear-handlers events/kind)) ;; think unreg-event-*\n\n;; -- interceptors ------------------------------------------------------------\n\n;; Standard interceptors.\n;; Detailed docs on each in std-interceptors.cljs\n(def debug       std-interceptors/debug)\n(def path        std-interceptors/path)\n(def enrich      std-interceptors/enrich)\n(def trim-v      std-interceptors/trim-v)\n(def after       std-interceptors/after)\n(def on-changes  std-interceptors/on-changes)\n\n\n;; Utility functions for creating your own interceptors\n;;\n;;  (def my-interceptor\n;;     (->interceptor                ;; used to create an interceptor\n;;       :id     :my-interceptor     ;; an id - decorative only\n;;       :before (fn [context]                         ;; you normally want to change :coeffects\n;;                  ... use get-coeffect  and assoc-coeffect\n;;                       )\n;;       :after  (fn [context]                         ;; you normally want to change :effects\n;;                 (let [db (get-effect context :db)]  ;; (get-in context [:effects :db])\n;;                   (assoc-effect context :http-ajax {...}])))))\n;;\n(def ->interceptor   interceptor/->interceptor)\n(def get-coeffect    interceptor/get-coeffect)\n(def assoc-coeffect  interceptor/assoc-coeffect)\n(def get-effect      interceptor/get-effect)\n(def assoc-effect    interceptor/assoc-effect)\n(def enqueue         interceptor/enqueue)\n\n\n;; --  logging ----------------------------------------------------------------\n;; Internally, re-frame uses the logging functions: warn, log, error, group and groupEnd\n;; By default, these functions map directly to the js/console implementations,\n;; but you can override with your own fns (set or subset).\n;; Example Usage:\n;;   (defn my-fn [& args]  (post-it-somewhere (apply str args)))  ;; here is my alternative\n;;   (re-frame.core/set-loggers!  {:warn my-fn :log my-fn})       ;; override the defaults with mine\n(def set-loggers! loggers/set-loggers!)\n\n;; If you are writing an extension to re-frame, like perhaps\n;; an effects handler, you may want to use re-frame logging.\n;;\n;; usage: (console :error \"Oh, dear God, it happened: \" a-var \" and \" another)\n;;        (console :warn \"Possible breach of containment wall at: \" dt)\n(def console loggers/console)\n\n\n;; -- unit testing ------------------------------------------------------------\n\n(defn make-restore-fn\n  \"Checkpoints the state of re-frame and returns a function which, when\n  later called, will restore re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  \"\n  []\n  (let [handlers @registrar/kind->id->handler\n        app-db   @db/app-db\n\t\t\t\tsubs-cache @subs/query->reaction]\n    (fn []\n\t\t\t;; call `dispose!` on all current subscriptions which\n\t\t\t;; didn't originally exist.\n      (let [original-subs (set (vals subs-cache))\n            current-subs  (set (vals @subs/query->reaction))]\n        (doseq [sub (set/difference current-subs original-subs)]\n          (interop/dispose! sub)))\n\n      ;; Reset the atoms\n      ;; We don't need to reset subs/query->reaction, as\n      ;; disposing of the subs removes them from the cache anyway\n      (reset! registrar/kind->id->handler handlers)\n      (reset! db/app-db app-db)\n      nil)))\n\n(defn purge-event-queue\n  \"Remove all events queued for processing\"\n  []\n  (router/purge router/event-queue))\n\n;; -- Event Processing Callbacks  ---------------------------------------------\n\n(defn add-post-event-callback\n  \"Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \\\"add time\\\" so it can subsequently\n  be used at \\\"remove time\\\" to get rid of the right callback.\n  \"\n  ([f]\n   (add-post-event-callback f f))   ;; use f as its own identifier\n  ([id f]\n   (router/add-post-event-callback router/event-queue id f)))\n\n\n(defn remove-post-event-callback\n  [id]\n  (router/remove-post-event-callback router/event-queue id))\n\n\n;; --  Deprecation ------------------------------------------------------------\n;; Assisting the v0.7.x ->  v0.8.x transition.\n(defn register-handler\n  [& args]\n  (console :warn  \"re-frame:  \\\"register-handler\\\" has been renamed \\\"reg-event-db\\\" (look for registration of\" (str (first args)) \")\")\n  (apply reg-event-db args))\n\n(defn register-sub\n  [& args]\n  (console :warn  \"re-frame:  \\\"register-sub\\\" is deprecated. Use \\\"reg-sub-raw\\\" (look for registration of\" (str (first args)) \")\")\n  (apply reg-sub-raw args))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/dispatch","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/dispatch","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/dispatch-sync","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/dispatch-sync","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-sub","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/reg-sub","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/subscribe","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/subscribe","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-sub","cljs.core.partial","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/clear-handlers","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/kind","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-subscription-cache!","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/clear-subscription-cache!","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-sub-raw","query-id","handler-fn","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/register-handler","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-fx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/reg-fx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-fx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/kind","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-cofx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/reg-cofx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/inject-cofx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/inject-cofx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-cofx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/kind","var_args","G__66576","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-db","js/Error","id","handler","day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db","interceptors","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events/register","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/inject-db","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/do-fx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/db-handler->interceptor","G__66586","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-fx","day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/fx-handler->interceptor","G__66594","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-ctx","day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/ctx-handler->interceptor","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-event","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events/kind","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/debug","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/debug","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/path","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/path","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/enrich","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/enrich","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/trim-v","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/trim-v","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/after","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/after","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/on-changes","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/on-changes","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/->interceptor","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/->interceptor","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/get-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/get-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/assoc-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/assoc-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/get-effect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/get-effect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/assoc-effect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/assoc-effect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/enqueue","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/enqueue","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/set-loggers!","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers/set-loggers!","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/console","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers/console","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/make-restore-fn","cljs.core/deref","handlers","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/kind->id->handler","app-db","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.db/app-db","subs-cache","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/query->reaction","original-subs","cljs.core/set","cljs.core/vals","current-subs","seq__66598","cljs.core/seq","chunk__66599","count__66600","i__66601","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","sub","clojure.set.difference","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop/dispose!","cljs.core/reset!","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/purge-event-queue","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/event-queue","G__66610","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/add-post-event-callback","f","day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/remove-post-event-callback","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/register-handler","seq66611","self__4724__auto__","args","G__66612","G__66613","G__66614","G__66615","cljs.core.apply","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/register-sub","seq66616","G__66617","G__66618","G__66619","G__66620"]],"~:used-vars",["^H",["~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/assoc-effect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events/kind","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/get-coeffect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/inject-db","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers/set-loggers!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-subscription-cache!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/event-queue","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/trim-v","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/enqueue","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/dispatch-sync","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-db","~$cljs.core/partial","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/remove-post-event-callback","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/kind","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/debug","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/enqueue","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/assoc-effect","~$cljs.core/count","~$cljs.core/seq","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/kind","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/get-coeffect","~$cljs.core/apply","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/assoc-coeffect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/register-sub","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/add-post-event-callback","~$cljs.core/chunk-rest","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/trim-v","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/assoc-coeffect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/kind","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/remove-post-event-callback","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.db/app-db","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-sub","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop/dispose!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/reg-sub","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/after","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/dispatch","~$cljs.core/reset!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/fx-handler->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events/register","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/debug","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/dispatch-sync","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/do-fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-sub","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/make-restore-fn","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers/console","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/enrich","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/db-handler->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/register-handler","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/path","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/register-handler","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/reg-cofx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/console","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/kind->id->handler","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-cofx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/on-changes","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/clear-subscription-cache!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/purge-event-queue","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/after","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/subscribe","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/enrich","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/clear-handlers","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-sub-raw","~$cljs.core/next","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/get-effect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-ctx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-cofx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/subscribe","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/path","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/reg-fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/ctx-handler->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/dispatch","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-event","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/get-effect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/purge","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/set-loggers!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/on-changes","~$js/Error","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/inject-cofx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/add-post-event-callback","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/inject-cofx","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1M","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","~$goog.dom.HtmlElement"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/ratom.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.util","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.debug","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.batching","^S","~$goog.object"]]],["^1M","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","~$goog.labs.userAgent.util","~$goog.string"]]],["^1M","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","~$goog.array","~$goog.asserts"]]],["^1M","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^1M","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4<","^4:","^49","~$goog.string.internal"]]],["^1M","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4=","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4>"]]],["^1M","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4="]]],["^1M","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^4:","~$goog.reflect","^4;"]]],["^1M","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/cofx.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^15","^[","^X","^Z"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/events.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^15","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.utils","^18","^X","^Z","^[","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.trace"]]],["^1M","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/std_interceptors.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^[","^Z","^X","^15","~$clojure.data","^T","^4I","^4J"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^O","^15","^[","^18","^1:","^X","^Z","^4J"]]],["^3Y","node_modules/scheduler/cjs/scheduler.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","f683a524b03498a1510e8212cb7ad7992728f04a","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42"]]],["^3Y","node_modules/scheduler/cjs/scheduler.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","9472969a489f23335a05beb90573f81a73239194","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42"]]],["^1M","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^3Y","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","d1e7bb5f7c53667de84b51d7535a959d16b917a5","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42"]]],["^3Y","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1M","shadow/js.js"],["fa1e82c50ca54c81300cceeb10716bdd3f414429","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^1M","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^1M","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4="]]],["^3Y","node_modules/react-dom/cjs/react-dom.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","c0a9a12882b6a3b459895ee85a69e94ac86fff02","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42","^?","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1628596618000,1628596618000,1620929005000],["^3Y","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42","^4N"]]],["^1M","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4=","^4H"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/util.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","~$clojure.string"]]],["^1M","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4=","~$goog.html.trustedtypes","^4A","^4B","^4C","^4D"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/core.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^?","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.template","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.component","^46","^48","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.ratom","^47","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.dom"]]],["^1M","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^3Y","node_modules/scheduler/cjs/scheduler-tracing.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","12fb110a42ab39177d6ab3e0a205e4a8ef350ae2","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42"]]],["^1M","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^1M","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4<","^4=","~$goog.html.SafeUrl","^4C","^4D","^4>"]]],["^1M","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4=","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4W","^4@","~$goog.html.uncheckedconversions","^4C","^4>"]]],["^1M","clojure/walk.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10"]]],["^1M","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1M","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4<","^4=","~$goog.dom.TagName","~$goog.dom.tags","^4[","^50","~$goog.html.SafeStyleSheet","^4W","^4@","^4R","^4A","^4B","^4E","^49","^4C","^4D","^4>"]]],["^1M","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^49"]]],["^1M","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/batching.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^47","^46"]]],["^3Y","node_modules/scheduler/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","408126fc2241739168bcaf5965ae56a7df143144","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1M","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4<","^4:","^4;"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/subs.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^15","^18","^Z","^4I","^X","^4J"]]],["^1M","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4<","^4=","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^54","~$goog.dom.safe","^4Z","^51","~$goog.math.Coordinate","~$goog.math.Size","^49","^4;","~$goog.string.Unicode","~$goog.userAgent"]]],["^1M","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","~$goog.debug.Error","^5:"]]],["^1M","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4<","^4=","^4;","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/dom.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^A","^46","^4S","^48","^4U"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/interop.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","~$goog.async.nextTick","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.core","^4U"]]],["^1M","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^3Y","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","519ffd5a4c91b67302cc9947b794966d629860cd","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42"]]],["^1M","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/trace.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^18","^Z","^4Y"]]],["^1M","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",[]]],["^1M","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4<","^49"]]],["^1M","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^4;","~$goog.string.StringBuffer"]]],["^3Y","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","6093d43b27c84de58b9ce55e3a930469339c9e54","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42","^4N"]]],["^1M","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4="]]],["^1M","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^5;","^51","^4C","^4>"]]],["^1M","clojure/data.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^S"]]],["^1M","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^1M","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4>"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^1:","^Q","^18","^15","^W","^T","^O","^Z","^X","^[","^17","^S"]]],["^1M","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^1M","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","~$goog.math"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/template.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^?","^4Q","~$clojure.walk","^46","^4T","^48","^4U","^47","^49"]]],["^1M","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4<","^4=","^4Y","^5I"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/db.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^18"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/loggers.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^S"]]],["^1M","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","~$goog.debug.entryPointRegistry","~$goog.dom","^54","^5;","^4Y","^4Z","^4@","^4E","^4F","^4C"]]],["^1M","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4=","^4Z","^4[","^50","^56","^4W","^4@","^4C","^4>"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/debug.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10"]]],["^1M","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12"]]],["^1M","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","~$goog.math.Long","~$goog.math.Integer","^4;","^49","^4<","~$goog.Uri","^5H"]]],["^1M","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4=","^4R","^4C","^4D"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/interceptor.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^Z","^18","^4J","^S"]]],["^1M","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4<","^4=","^50","^49","^4C","^4D","^4>"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/utils.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^Z"]]],["^1M","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4H"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/router.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^1:","^18","^Z","^4J"]]],["^1M","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^5?"]]],["^3Y","node_modules/scheduler/tracing.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","4a7a89de5eaa5548bfc85da9e5243b3c7e444a34","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^3Y","node_modules/react-dom/cjs/react-dom.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","83ba8373b41b94fbb7881e4cf06202757ea7bb11","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^42","^?","^4N","^4O","~$module$node_modules$scheduler$tracing"]]],["^1M","clojure/set.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10"]]],["^1M","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4<","^4=","^4;"]]],["^1M","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^4=","^4D"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/registrar.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^18","^Z"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/component.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^3Z",["^ ","^3[",null,"^40",["^H",[]],"^41",["^12","^10","^49","^?","^46","^48","^4U","^47"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1614513934000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1614513934000,"jar:file:/C:/Users/lenovo/.m2/repository/day8/re-frame/re-frame-10x/0.7.0/re-frame-10x-0.7.0.jar!/day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/trace.cljc",1628847674000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1620929005000,"jar:file:/C:/Users/lenovo/.m2/repository/day8/re-frame/re-frame-10x/0.7.0/re-frame-10x-0.7.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/core.clj",1628847674000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1614513934000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1614407951000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1614407951000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1614407951000,"jar:file:/C:/Users/lenovo/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1618326423000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1614407935000,"jar:file:/C:/Users/lenovo/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1618326422000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1620929005000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1620929005000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1620929005000,"jar:file:/C:/Users/lenovo/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1618326423000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1620929005000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1620929005000,"jar:file:/C:/Users/lenovo/.m2/repository/day8/re-frame/re-frame-10x/0.7.0/re-frame-10x-0.7.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/debug.clj",1628847674000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1620929005000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1614513934000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1620929005000,"jar:file:/C:/Users/lenovo/.m2/repository/day8/re-frame/re-frame-10x/0.7.0/re-frame-10x-0.7.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/ratom.clj",1628847674000,"jar:file:/C:/Users/lenovo/.m2/repository/day8/re-frame/re-frame-10x/0.7.0/re-frame-10x-0.7.0.jar!/day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/interop.clj",1628847674000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1614513934000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1614513934000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1614407951000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1620929005000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1614513934000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1620929005000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1614407951000,"jar:file:/C:/Users/lenovo/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1620929005000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",1,"^8",5,"^9",1,"^:",66],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^Q","^R","^S","^T","^T","^U","^T","^V","^W","^Q","^Q","^X","^X","^Y","^Z","^W","^W","^[","^[","^10","^10","^11","^[","^Z","^Z","^12","^12","^13","^O","^14","^15","^16","^X","^17","^17","^18","^18","^S","^S","^19","^1:","^15","^15","^1:","^1:","^1;","^18","^1<","^17"],"^1=",["^H",["^1>"]],"~:shadow/js-access-global",["^H",["Error"]],"^1?",["^ ","^1@","^17","^1A","^17","^1B","^17"],"~:defs",["^ ","~$console",["^ ","^I","^36","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",164,"^8",1,"^9",164,"^:",13,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",164,"^8",6,"^9",164,"^:",13]],"~$on-changes",["^ ","^I","^3P","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",127,"^8",1,"^9",127,"^:",16,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",127,"^8",6,"^9",127,"^:",16]],"~$enrich",["^ ","^I","^30","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",124,"^8",1,"^9",124,"^:",12,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",124,"^8",6,"^9",124,"^:",12]],"~$reg-sub-raw",["^ ","~:protocol-inline",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",51,"^8",7,"^9",51,"^:",18,"~:arglists",["^1E",["~$quote",["^1E",[["~$query-id","~$handler-fn"]]]]],"~:doc","This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/day8/re-frame/blob/master/docs/SubscriptionFlow.md"],"^I","^3@","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",18,"~:method-params",["^1E",[["^6R","^6S"]]],"~:protocol-impl",null,"~:arglists-meta",["^1E",[null,null]],"^8",1,"~:variadic?",false,"^7",51,"~:ret-tag","~$any","^9",51,"~:max-fixed-arity",2,"~:fn-var",true,"^6P",["^1E",["^6Q",["^1E",[["^6R","^6S"]]]]],"^6T","This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/day8/re-frame/blob/master/docs/SubscriptionFlow.md"],"~$subscribe",["^ ","^I","^3=","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",46,"^8",1,"^9",46,"^:",15,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",46,"^8",6,"^9",46,"^:",15]],"~$assoc-coeffect",["^ ","^I","^2C","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",144,"^8",1,"^9",144,"^:",20,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",144,"^8",6,"^9",144,"^:",20]],"~$register-sub",["^ ","^6O",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",234,"^8",7,"^9",234,"^:",19,"^6P",["^1E",["^6Q",["^1E",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^6X",true,"~:fixed-arity",0,"^6[",0,"^6U",[["^1E",["^74"]]],"^6P",["^1E",[["~$&","^74"]]],"^6W",["^1E",[null]]]],"^I","^2E","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",19,"^75",["^ ","^6X",true,"^76",0,"^6[",0,"^6U",[["^1E",["^74"]]],"^6P",["^1E",[["~$&","^74"]]],"^6W",["^1E",[null]]],"^6U",[["^1E",["^74"]]],"^6V",null,"^76",0,"^6W",["^1E",[null]],"^8",1,"^6X",true,"~:methods",[["^ ","^76",0,"^6X",true,"~:tag","^6Z"]],"^7",234,"^6Y","^6Z","^9",234,"^6[",0,"^70",true,"^6P",["^1E",[["~$&","^74"]]]],"~$purge-event-queue",["^ ","^6O",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",194,"^8",7,"^9",194,"^:",24,"^6P",["^1E",["^6Q",["^1E",[[]]]]],"^6T","Remove all events queued for processing"],"^I","^3;","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",24,"^6U",["^1E",[[]]],"^6V",null,"^6W",["^1E",[null,null]],"^8",1,"^6X",false,"^7",194,"^6Y","^6Z","^9",194,"^6[",0,"^70",true,"^6P",["^1E",["^6Q",["^1E",[[]]]]],"^6T","Remove all events queued for processing"],"~$remove-post-event-callback",["^ ","^6O",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",222,"^8",7,"^9",222,"^:",33,"^6P",["^1E",["^6Q",["^1E",[["~$id"]]]]]],"^I","^2L","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",33,"^6U",["^1E",[["^7;"]]],"^6V",null,"^6W",["^1E",[null,null]],"^8",1,"^6X",false,"^7",222,"^6Y","^6Z","^9",222,"^6[",1,"^70",true,"^6P",["^1E",["^6Q",["^1E",[["^7;"]]]]]],"~$path",["^ ","^I","^3F","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",123,"^8",1,"^9",123,"^:",10,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",123,"^8",6,"^9",123,"^:",10]],"~$reg-sub",["^ ","^I","^2Y","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",45,"^8",1,"^9",45,"^:",13,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",45,"^8",6,"^9",45,"^:",13]],"~$make-restore-fn",["^ ","^6O",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",169,"^8",7,"^9",169,"^:",22,"^6P",["^1E",["^6Q",["^1E",[[]]]]],"^6T","Checkpoints the state of re-frame and returns a function which, when\n  later called, will restore re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"^I","^2Z","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",22,"^6U",["^1E",[[]]],"^6V",null,"^6W",["^1E",[null,null]],"^8",1,"^6X",false,"^7",169,"^6Y","~$function","^9",169,"^6[",0,"^70",true,"^6P",["^1E",["^6Q",["^1E",[[]]]]],"^6T","Checkpoints the state of re-frame and returns a function which, when\n  later called, will restore re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"~$clear-fx",["^ ","^I","^3G","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",61,"^8",1,"^9",61,"^:",14,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",61,"^8",6,"^9",61,"^:",14],"^78","^7?"],"~$get-effect",["^ ","^I","^3B","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",145,"^8",1,"^9",145,"^:",16,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",145,"^8",6,"^9",145,"^:",16]],"~$reg-event-db",["^ ","^6O",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",71,"^8",7,"^9",71,"^:",19,"^6P",["^1E",["^6Q",["^1E",[["^7;","~$handler"],["^7;","~$interceptors","^7C"]]]]],"^6T","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain.","^75",["^ ","^6X",false,"^76",3,"^6[",3,"^6U",[["^7;","^7C"],["^7;","^7D","^7C"]],"^6P",["^1E",[["^7;","^7C"],["^7;","^7D","^7C"]]],"^6W",["^1E",[null,null]]]],"^I","^27","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",19,"^75",["^ ","^6X",false,"^76",3,"^6[",3,"^6U",[["^7;","^7C"],["^7;","^7D","^7C"]],"^6P",["^1E",[["^7;","^7C"],["^7;","^7D","^7C"]]],"^6W",["^1E",[null,null]]],"^6U",[["^7;","^7C"],["^7;","^7D","^7C"]],"^6V",null,"^76",3,"^6W",["^1E",[null,null]],"^8",1,"^6X",false,"^77",[["^ ","^76",2,"^6X",false,"^78","^6Z"],["^ ","^76",3,"^6X",false,"^78","^6Z"]],"^7",71,"^9",71,"^6[",3,"^70",true,"^6P",["^1E",[["^7;","^7C"],["^7;","^7D","^7C"]]],"^6T","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain."],"~$dispatch-sync",["^ ","^I","^26","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",41,"^8",1,"^9",41,"^:",19,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",41,"^8",6,"^9",41,"^:",19]],"~$clear-event",["^ ","^I","^3K","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",116,"^8",1,"^9",116,"^:",17,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",116,"^8",6,"^9",116,"^:",17],"^78","^7?"],"~$->interceptor",["^ ","^I","^3S","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",142,"^8",1,"^9",142,"^:",19,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",142,"^8",6,"^9",142,"^:",19]],"~$set-loggers!",["^ ","^I","^3O","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",157,"^8",1,"^9",157,"^:",18,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",157,"^8",6,"^9",157,"^:",18]],"~$inject-cofx",["^ ","^I","^3R","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",65,"^8",1,"^9",65,"^:",17,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",65,"^8",6,"^9",65,"^:",17]],"~$get-coeffect",["^ ","^I","^2A","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",143,"^8",1,"^9",143,"^:",18,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",143,"^8",6,"^9",143,"^:",18]],"~$debug",["^ ","^I","^2;","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",122,"^8",1,"^9",122,"^:",11,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",122,"^8",6,"^9",122,"^:",11],"^78","~$cljs.core/IMap"],"~$assoc-effect",["^ ","^I","^2=","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",146,"^8",1,"^9",146,"^:",18,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",146,"^8",6,"^9",146,"^:",18]],"~$enqueue",["^ ","^I","^2<","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",147,"^8",1,"^9",147,"^:",13,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",147,"^8",6,"^9",147,"^:",13]],"~$clear-cofx",["^ ","^I","^3D","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",66,"^8",1,"^9",66,"^:",16,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",66,"^8",6,"^9",66,"^:",16],"^78","^7?"],"~$reg-event-ctx",["^ ","^6O",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",104,"^8",7,"^9",104,"^:",20,"^6P",["^1E",["^6Q",["^1E",[["^7;","^7C"],["^7;","^7D","^7C"]]]]],"^6T","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. ","^75",["^ ","^6X",false,"^76",3,"^6[",3,"^6U",[["^7;","^7C"],["^7;","^7D","^7C"]],"^6P",["^1E",[["^7;","^7C"],["^7;","^7D","^7C"]]],"^6W",["^1E",[null,null]]]],"^I","^3C","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",20,"^75",["^ ","^6X",false,"^76",3,"^6[",3,"^6U",[["^7;","^7C"],["^7;","^7D","^7C"]],"^6P",["^1E",[["^7;","^7C"],["^7;","^7D","^7C"]]],"^6W",["^1E",[null,null]]],"^6U",[["^7;","^7C"],["^7;","^7D","^7C"]],"^6V",null,"^76",3,"^6W",["^1E",[null,null]],"^8",1,"^6X",false,"^77",[["^ ","^76",2,"^6X",false,"^78","^6Z"],["^ ","^76",3,"^6X",false,"^78","^6Z"]],"^7",104,"^9",104,"^6[",3,"^70",true,"^6P",["^1E",[["^7;","^7C"],["^7;","^7D","^7C"]]],"^6T","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. "],"~$reg-fx",["^ ","^I","^2D","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",60,"^8",1,"^9",60,"^:",12,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",60,"^8",6,"^9",60,"^:",12]],"~$trim-v",["^ ","^I","^2H","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",125,"^8",1,"^9",125,"^:",12,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",125,"^8",6,"^9",125,"^:",12],"^78","^7L"],"~$clear-sub",["^ ","^I","^2N","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",48,"^8",1,"^9",48,"^:",15,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",48,"^8",6,"^9",48,"^:",15],"^78","^7?"],"~$dispatch",["^ ","^I","^2R","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",40,"^8",1,"^9",40,"^:",14,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",40,"^8",6,"^9",40,"^:",14]],"~$after",["^ ","^I","^3<","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",126,"^8",1,"^9",126,"^:",11,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",126,"^8",6,"^9",126,"^:",11]],"~$add-post-event-callback",["^ ","^6O",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",201,"^8",7,"^9",201,"^:",30,"^6P",["^1E",["^6Q",["^1E",[["~$f"],["^7;","~$f"]]]]],"^6T","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  ","^75",["^ ","^6X",false,"^76",2,"^6[",2,"^6U",[["~$f"],["^7;","~$f"]],"^6P",["^1E",[["~$f"],["^7;","~$f"]]],"^6W",["^1E",[null,null]]]],"^I","^2F","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",30,"^75",["^ ","^6X",false,"^76",2,"^6[",2,"^6U",[["~$f"],["^7;","~$f"]],"^6P",["^1E",[["~$f"],["^7;","~$f"]]],"^6W",["^1E",[null,null]]],"^6U",[["~$f"],["^7;","~$f"]],"^6V",null,"^76",2,"^6W",["^1E",[null,null]],"^8",1,"^6X",false,"^77",[["^ ","^76",1,"^6X",false,"^78","^6Z"],["^ ","^76",2,"^6X",false,"^78","^6Z"]],"^7",201,"^9",201,"^6[",2,"^70",true,"^6P",["^1E",[["~$f"],["^7;","~$f"]]],"^6T","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  "],"~$reg-cofx",["^ ","^I","^38","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",64,"^8",1,"^9",64,"^:",14,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",64,"^8",6,"^9",64,"^:",14]],"~$reg-event-fx",["^ ","^6O",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",87,"^8",7,"^9",87,"^:",19,"^6P",["^1E",["^6Q",["^1E",[["^7;","^7C"],["^7;","^7D","^7C"]]]]],"^6T","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects.","^75",["^ ","^6X",false,"^76",3,"^6[",3,"^6U",[["^7;","^7C"],["^7;","^7D","^7C"]],"^6P",["^1E",[["^7;","^7C"],["^7;","^7D","^7C"]]],"^6W",["^1E",[null,null]]]],"^I","^2K","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",19,"^75",["^ ","^6X",false,"^76",3,"^6[",3,"^6U",[["^7;","^7C"],["^7;","^7D","^7C"]],"^6P",["^1E",[["^7;","^7C"],["^7;","^7D","^7C"]]],"^6W",["^1E",[null,null]]],"^6U",[["^7;","^7C"],["^7;","^7D","^7C"]],"^6V",null,"^76",3,"^6W",["^1E",[null,null]],"^8",1,"^6X",false,"^77",[["^ ","^76",2,"^6X",false,"^78","^6Z"],["^ ","^76",3,"^6X",false,"^78","^6Z"]],"^7",87,"^9",87,"^6[",3,"^70",true,"^6P",["^1E",[["^7;","^7C"],["^7;","^7D","^7C"]]],"^6T","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects."],"~$register-handler",["^ ","^6O",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",229,"^8",7,"^9",229,"^:",23,"^6P",["^1E",["^6Q",["^1E",[["~$&","^74"]]]]],"^75",["^ ","^6X",true,"^76",0,"^6[",0,"^6U",[["^1E",["^74"]]],"^6P",["^1E",[["~$&","^74"]]],"^6W",["^1E",[null]]]],"^I","^32","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",23,"^75",["^ ","^6X",true,"^76",0,"^6[",0,"^6U",[["^1E",["^74"]]],"^6P",["^1E",[["~$&","^74"]]],"^6W",["^1E",[null]]],"^6U",[["^1E",["^74"]]],"^6V",null,"^76",0,"^6W",["^1E",[null]],"^8",1,"^6X",true,"^77",[["^ ","^76",0,"^6X",true,"^78","^6Z"]],"^7",229,"^6Y","^6Z","^9",229,"^6[",0,"^70",true,"^6P",["^1E",[["~$&","^74"]]]],"~$clear-subscription-cache!",["^ ","^I","^22","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",49,"^8",1,"^9",49,"^:",31,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",49,"^8",6,"^9",49,"^:",31]]],"^1C",["^ ","^10","^10"],"~:cljs.analyzer/constants",["^ ","^1=",["^H",["~:warn"]],"~:order",["^80"]],"^1I",["^ ","^1>",["^H",[]]],"^1J",["^ "],"^1K",["^12","^10","^1:","^Q","^18","^15","^W","^T","^O","^Z","^X","^[","^17","^S"]],"^L","^J","~:ns-specs",["^ "],"~:ns-spec-vars",["^H",[]],"~:compiler-options",["^3X",[["^84","~:static-fns"],true,["^84","~:shadow-tweaks"],null,["^84","~:source-map-inline"],null,["^84","~:elide-asserts"],false,["^84","~:optimize-constants"],null,["^84","^1P"],null,["^84","~:external-config"],null,["^84","~:tooling-config"],null,["^84","~:emit-constants"],null,["^84","~:load-tests"],null,["^84","~:form-size-threshold"],null,["^84","~:data-readers"],null,["^84","~:infer-externs"],"~:auto",["^84","^1R"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^84","~:fn-invoke-direct"],null,["^84","~:source-map"],"/dev/null"]]]